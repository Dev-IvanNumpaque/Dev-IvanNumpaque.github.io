---
import data from '../data/data.json';
const { experience } = data;
---

<section id="experience" class="section-common">
  <h2 class="numbered-heading">Donde he Trabajado</h2>
  <div class="experience-content">
    <div class="experience-tabs" role="tablist" aria-label="Work experience tabs">
      {experience.map((job, index) => (
        <button 
          class={`tab-button ${index === 0 ? 'active' : ''}`}
          data-index={index}
        >
          {job.company}
        </button>
      ))}
    </div>
    
    {experience.map((job, index) => (
      <div 
        class={`tab-content ${index === 0 ? 'active' : ''}`}
        data-index={index}
      >
        <h3>{job.position} <span class="company">@ {job.company}</span></h3>
        <p class="job-duration">{job.startDate} - {job.endDate}</p>
        <p class="job-location">{job.location}</p>
        <ul class="experience-list">
          {job.responsibilities.map((responsibility) => (
            <li>{responsibility}</li>
          ))}
        </ul>
        <h4>Logros Destacados:</h4>
        <ul class="achievements-list">
          {job.achievements.map((achievement) => (
            <li>{achievement}</li>
          ))}
        </ul>
        <div class="technologies">
          <h4>Tecnologías:</h4>
          <ul class="tech-list">
            {job.technologies.map((tech) => (
              <li>{tech}</li>
            ))}
          </ul>
        </div>
      </div>
    ))}
  </div>
</section>

<style>
  .experience-content {
    display: grid;
    grid-template-columns: max-content 1fr;
    gap: 50px;
  }

  .experience-tabs {
    display: flex;
    flex-direction: column;
    position: relative;
  }

  .tab-button {
    background: transparent;
    border: none;
    border-left: 2px solid var(--color-navy);
    color: var(--color-text);
    font-family: var(--font-mono);
    font-size: var(--font-size-sm);
    text-align: left;
    padding: 1rem 2rem;
    transition: var(--transition);
    cursor: pointer;
  }

  .tab-button:hover {
    color: var(--color-accent);
    background-color: var(--color-bg-light);
  }

  .tab-button.active {
    border-color: var(--color-accent);
    color: var(--color-accent);
  }

  .tab-content {
    display: none;
    padding: 1rem 0;
    opacity: 0;
    transform: translateX(20px);
    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
  }

  .tab-content.active {
    display: block;
    opacity: 1;
    transform: translateX(0);
  }

  .experience-list {
    list-style: none;
    padding: 0;
    margin: 20px 0;
  }

  .experience-list li {
    position: relative;
    padding-left: 30px;
    margin-bottom: 10px;
  }

  .experience-list li::before {
    content: '▹';
    position: absolute;
    left: 0;
    color: var(--color-accent);
  }

  .company {
    color: var(--color-accent);
  }

  .job-duration,
  .job-location {
    color: var(--color-text);
    font-family: var(--font-mono);
    font-size: var(--font-size-sm);
    margin: 0.5rem 0;
  }

  h4 {
    color: var(--color-lightest);
    margin: 1rem 0 0.5rem;
    font-size: var(--font-size-md);
  }

  .achievements-list {
    list-style: none;
    padding: 0;
    margin: 0.5rem 0;
  }

  .achievements-list li {
    position: relative;
    padding-left: 30px;
    margin-bottom: 10px;
    color: var(--color-text);
  }

  .achievements-list li::before {
    content: '★';
    position: absolute;
    left: 0;
    color: var(--color-accent);
  }

  .tech-list {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    list-style: none;
    padding: 0;
    margin: 0.5rem 0;
  }

  .tech-list li {
    color: var(--color-text);
    font-family: var(--font-mono);
    font-size: var(--font-size-sm);
    background-color: var(--color-bg-light);
    padding: 0.25rem 0.5rem;
    border-radius: 3px;
  }
</style>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const tabs = document.querySelectorAll('.tab-button');
    const contents = document.querySelectorAll('.tab-content');

    function switchTab(index) {
      const tabs = document.querySelectorAll('.tab-button');
      const contents = document.querySelectorAll('.tab-content');
      
      // Si la pestaña ya está activa, no hacemos nada
      if (tabs[index].classList.contains('active')) return;
      
      // Encontrar el contenido actualmente activo
      const currentContent = document.querySelector('.tab-content.active');
      const currentTab = document.querySelector('.tab-button.active');
      
      // Remover clases activas
      currentTab.classList.remove('active');
      currentContent.classList.remove('active');
      
      // Activar la nueva pestaña y contenido
      tabs[index].classList.add('active');
      contents[index].classList.add('active');
      
      // Aplicar la transición al contenido
      currentContent.style.opacity = '0';
      currentContent.style.transform = 'translateX(20px)';
      
      // Mostrar el nuevo contenido con transición
      setTimeout(() => {
        contents[index].style.opacity = '1';
        contents[index].style.transform = 'translateX(0)';
      }, 50);
    }

    tabs.forEach((tab, index) => {
      tab.addEventListener('click', () => switchTab(index));
      
      // Añadir navegación por teclado
      tab.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          switchTab(index);
        }
      });
    });
  });
</script>